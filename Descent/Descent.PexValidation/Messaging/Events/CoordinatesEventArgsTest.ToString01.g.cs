// <copyright file="CoordinatesEventArgsTest.ToString01.g.cs">Copyright ©  2011</copyright>
// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;

namespace Descent.Messaging.Events
{
    public partial class CoordinatesEventArgsTest
    {
[TestMethod]
[PexGeneratedBy(typeof(CoordinatesEventArgsTest))]
public void ToString01413()
{
    string s;
    CoordinatesEventArgs s0 = new CoordinatesEventArgs(int.MaxValue, 1);
    ((GameEventArgs)s0).SenderId = 0;
    ((GameEventArgs)s0).EventId = (string)null;
    ((GameEventArgs)s0).EventType = (EventType)0;
    ((GameEventArgs)s0).NeedResponse = false;
    s = this.ToString01(s0);
    Assert.AreEqual<string>("2147483647,1", s);
    Assert.IsNotNull((object)s0);
    Assert.AreEqual<int>(int.MaxValue, s0.X);
    Assert.AreEqual<int>(1, s0.Y);
    Assert.AreEqual<int>(0, ((GameEventArgs)s0).SenderId);
    Assert.AreEqual<string>((string)null, ((GameEventArgs)s0).EventId);
    Assert.AreEqual<EventType>((EventType)0, ((GameEventArgs)s0).EventType);
    Assert.AreEqual<bool>(false, ((GameEventArgs)s0).NeedResponse);
}
[TestMethod]
[PexGeneratedBy(typeof(CoordinatesEventArgsTest))]
public void ToString01337()
{
    string s;
    CoordinatesEventArgs s0 = new CoordinatesEventArgs(1, 0);
    ((GameEventArgs)s0).SenderId = 0;
    ((GameEventArgs)s0).EventId = (string)null;
    ((GameEventArgs)s0).EventType = (EventType)0;
    ((GameEventArgs)s0).NeedResponse = false;
    s = this.ToString01(s0);
    Assert.AreEqual<string>("1,0", s);
    Assert.IsNotNull((object)s0);
    Assert.AreEqual<int>(1, s0.X);
    Assert.AreEqual<int>(0, s0.Y);
    Assert.AreEqual<int>(0, ((GameEventArgs)s0).SenderId);
    Assert.AreEqual<string>((string)null, ((GameEventArgs)s0).EventId);
    Assert.AreEqual<EventType>((EventType)0, ((GameEventArgs)s0).EventType);
    Assert.AreEqual<bool>(false, ((GameEventArgs)s0).NeedResponse);
}
[TestMethod]
[PexGeneratedBy(typeof(CoordinatesEventArgsTest))]
public void ToString01482()
{
    string s;
    CoordinatesEventArgs s0 = new CoordinatesEventArgs(0, 0);
    ((GameEventArgs)s0).SenderId = 0;
    ((GameEventArgs)s0).EventId = (string)null;
    ((GameEventArgs)s0).EventType = (EventType)0;
    ((GameEventArgs)s0).NeedResponse = false;
    s = this.ToString01(s0);
    Assert.AreEqual<string>("0,0", s);
    Assert.IsNotNull((object)s0);
    Assert.AreEqual<int>(0, s0.X);
    Assert.AreEqual<int>(0, s0.Y);
    Assert.AreEqual<int>(0, ((GameEventArgs)s0).SenderId);
    Assert.AreEqual<string>((string)null, ((GameEventArgs)s0).EventId);
    Assert.AreEqual<EventType>((EventType)0, ((GameEventArgs)s0).EventType);
    Assert.AreEqual<bool>(false, ((GameEventArgs)s0).NeedResponse);
}
    }
}
