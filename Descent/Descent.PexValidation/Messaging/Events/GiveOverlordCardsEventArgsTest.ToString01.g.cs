// <copyright file="GiveOverlordCardsEventArgsTest.ToString01.g.cs">Copyright ©  2011</copyright>
// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;

namespace Descent.Messaging.Events
{
    public partial class GiveOverlordCardsEventArgsTest
    {
[TestMethod]
[PexGeneratedBy(typeof(GiveOverlordCardsEventArgsTest))]
public void ToString01300()
{
    GiveOverlordCardsEventArgs giveOverlordCardsEventArgs;
    string s;
    int[] ints = new int[15];
    giveOverlordCardsEventArgs = new GiveOverlordCardsEventArgs(ints);
    ((GameEventArgs)giveOverlordCardsEventArgs).SenderId = 0;
    ((GameEventArgs)giveOverlordCardsEventArgs).EventId = (string)null;
    ((GameEventArgs)giveOverlordCardsEventArgs).EventType = (EventType)0;
    ((GameEventArgs)giveOverlordCardsEventArgs).NeedResponse = false;
    s = this.ToString01(giveOverlordCardsEventArgs);
    Assert.AreEqual<string>("15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0", s);
    Assert.IsNotNull((object)giveOverlordCardsEventArgs);
    Assert.IsNotNull(giveOverlordCardsEventArgs.OverlordCardIds);
    Assert.AreEqual<int>(15, giveOverlordCardsEventArgs.OverlordCardIds.Length);
    Assert.AreEqual<int>(0, giveOverlordCardsEventArgs.OverlordCardIds[0]);
    Assert.AreEqual<int>(0, giveOverlordCardsEventArgs.OverlordCardIds[1]);
    Assert.AreEqual<int>(0, giveOverlordCardsEventArgs.OverlordCardIds[2]);
    Assert.AreEqual<int>(0, giveOverlordCardsEventArgs.OverlordCardIds[3]);
    Assert.AreEqual<int>(0, giveOverlordCardsEventArgs.OverlordCardIds[4]);
    Assert.AreEqual<int>(0, giveOverlordCardsEventArgs.OverlordCardIds[5]);
    Assert.AreEqual<int>(0, giveOverlordCardsEventArgs.OverlordCardIds[6]);
    Assert.AreEqual<int>(0, giveOverlordCardsEventArgs.OverlordCardIds[7]);
    Assert.AreEqual<int>(0, giveOverlordCardsEventArgs.OverlordCardIds[8]);
    Assert.AreEqual<int>(0, giveOverlordCardsEventArgs.OverlordCardIds[9]);
    Assert.AreEqual<int>(0, giveOverlordCardsEventArgs.OverlordCardIds[10]);
    Assert.AreEqual<int>(0, giveOverlordCardsEventArgs.OverlordCardIds[11]);
    Assert.AreEqual<int>(0, giveOverlordCardsEventArgs.OverlordCardIds[12]);
    Assert.AreEqual<int>(0, giveOverlordCardsEventArgs.OverlordCardIds[13]);
    Assert.AreEqual<int>(0, giveOverlordCardsEventArgs.OverlordCardIds[14]);
    Assert.AreEqual<int>(0, ((GameEventArgs)giveOverlordCardsEventArgs).SenderId);
    Assert.AreEqual<string>
        ((string)null, ((GameEventArgs)giveOverlordCardsEventArgs).EventId);
    Assert.AreEqual<EventType>
        ((EventType)0, ((GameEventArgs)giveOverlordCardsEventArgs).EventType);
    Assert.AreEqual<bool>
        (false, ((GameEventArgs)giveOverlordCardsEventArgs).NeedResponse);
}
[TestMethod]
[PexGeneratedBy(typeof(GiveOverlordCardsEventArgsTest))]
public void ToString01542()
{
    GiveOverlordCardsEventArgs giveOverlordCardsEventArgs;
    string s;
    int[] ints = new int[1];
    giveOverlordCardsEventArgs = new GiveOverlordCardsEventArgs(ints);
    ((GameEventArgs)giveOverlordCardsEventArgs).SenderId = 0;
    ((GameEventArgs)giveOverlordCardsEventArgs).EventId = (string)null;
    ((GameEventArgs)giveOverlordCardsEventArgs).EventType = (EventType)0;
    ((GameEventArgs)giveOverlordCardsEventArgs).NeedResponse = false;
    s = this.ToString01(giveOverlordCardsEventArgs);
    Assert.AreEqual<string>("1,0", s);
    Assert.IsNotNull((object)giveOverlordCardsEventArgs);
    Assert.IsNotNull(giveOverlordCardsEventArgs.OverlordCardIds);
    Assert.AreEqual<int>(1, giveOverlordCardsEventArgs.OverlordCardIds.Length);
    Assert.AreEqual<int>(0, giveOverlordCardsEventArgs.OverlordCardIds[0]);
    Assert.AreEqual<int>(0, ((GameEventArgs)giveOverlordCardsEventArgs).SenderId);
    Assert.AreEqual<string>
        ((string)null, ((GameEventArgs)giveOverlordCardsEventArgs).EventId);
    Assert.AreEqual<EventType>
        ((EventType)0, ((GameEventArgs)giveOverlordCardsEventArgs).EventType);
    Assert.AreEqual<bool>
        (false, ((GameEventArgs)giveOverlordCardsEventArgs).NeedResponse);
}
    }
}
