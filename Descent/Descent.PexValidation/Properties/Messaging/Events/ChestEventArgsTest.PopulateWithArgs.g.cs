// <copyright file="ChestEventArgsTest.PopulateWithArgs.g.cs">Copyright ©  2011</copyright>
// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;
using Microsoft.Pex.Engine.Exceptions;

namespace Descent.Messaging.Events
{
    public partial class ChestEventArgsTest
    {
[TestMethod]
[PexGeneratedBy(typeof(ChestEventArgsTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void PopulateWithArgsThrowsContractException498()
{
    try
    {
      ChestEventArgs chestEventArgs;
      chestEventArgs = new ChestEventArgs(0);
      ((GameEventArgs)chestEventArgs).SenderId = 0;
      ((GameEventArgs)chestEventArgs).EventId = (string)null;
      ((GameEventArgs)chestEventArgs).EventType = (EventType)0;
      ((GameEventArgs)chestEventArgs).NeedResponse = false;
      string[] ss = new string[1];
      ss[0] = "-0";
      this.PopulateWithArgs(chestEventArgs, ss);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(ChestEventArgsTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void PopulateWithArgsThrowsContractException81()
{
    try
    {
      ChestEventArgs chestEventArgs;
      chestEventArgs = new ChestEventArgs(0);
      ((GameEventArgs)chestEventArgs).SenderId = 0;
      ((GameEventArgs)chestEventArgs).EventId = (string)null;
      ((GameEventArgs)chestEventArgs).EventType = (EventType)0;
      ((GameEventArgs)chestEventArgs).NeedResponse = false;
      string[] ss = new string[1];
      ss[0] = "-\0";
      this.PopulateWithArgs(chestEventArgs, ss);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(ChestEventArgsTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void PopulateWithArgsThrowsContractException110()
{
    try
    {
      ChestEventArgs chestEventArgs;
      chestEventArgs = new ChestEventArgs(0);
      ((GameEventArgs)chestEventArgs).SenderId = 0;
      ((GameEventArgs)chestEventArgs).EventId = (string)null;
      ((GameEventArgs)chestEventArgs).EventType = (EventType)0;
      ((GameEventArgs)chestEventArgs).NeedResponse = false;
      string[] ss = new string[1];
      ss[0] = "0\0";
      this.PopulateWithArgs(chestEventArgs, ss);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(ChestEventArgsTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void PopulateWithArgsThrowsContractException561()
{
    try
    {
      ChestEventArgs chestEventArgs;
      chestEventArgs = new ChestEventArgs(0);
      ((GameEventArgs)chestEventArgs).SenderId = 0;
      ((GameEventArgs)chestEventArgs).EventId = (string)null;
      ((GameEventArgs)chestEventArgs).EventType = (EventType)0;
      ((GameEventArgs)chestEventArgs).NeedResponse = false;
      string[] ss = new string[1];
      ss[0] = "-";
      this.PopulateWithArgs(chestEventArgs, ss);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(ChestEventArgsTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void PopulateWithArgsThrowsContractException676()
{
    try
    {
      ChestEventArgs chestEventArgs;
      chestEventArgs = new ChestEventArgs(0);
      ((GameEventArgs)chestEventArgs).SenderId = 0;
      ((GameEventArgs)chestEventArgs).EventId = (string)null;
      ((GameEventArgs)chestEventArgs).EventType = (EventType)0;
      ((GameEventArgs)chestEventArgs).NeedResponse = false;
      string[] ss = new string[1];
      ss[0] = ":";
      this.PopulateWithArgs(chestEventArgs, ss);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(ChestEventArgsTest))]
public void PopulateWithArgs20()
{
    ChestEventArgs chestEventArgs;
    chestEventArgs = new ChestEventArgs(0);
    ((GameEventArgs)chestEventArgs).SenderId = 0;
    ((GameEventArgs)chestEventArgs).EventId = (string)null;
    ((GameEventArgs)chestEventArgs).EventType = (EventType)0;
    ((GameEventArgs)chestEventArgs).NeedResponse = false;
    string[] ss = new string[1];
    ss[0] = "1";
    this.PopulateWithArgs(chestEventArgs, ss);
    Assert.IsNotNull((object)chestEventArgs);
    Assert.AreEqual<int>(1, chestEventArgs.ChestId);
    Assert.AreEqual<int>(0, ((GameEventArgs)chestEventArgs).SenderId);
    Assert.AreEqual<string>((string)null, ((GameEventArgs)chestEventArgs).EventId);
    Assert.AreEqual<EventType>
        ((EventType)0, ((GameEventArgs)chestEventArgs).EventType);
    Assert.AreEqual<bool>(false, ((GameEventArgs)chestEventArgs).NeedResponse);
}
[TestMethod]
[PexGeneratedBy(typeof(ChestEventArgsTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void PopulateWithArgsThrowsContractException656()
{
    try
    {
      ChestEventArgs chestEventArgs;
      chestEventArgs = new ChestEventArgs(0);
      ((GameEventArgs)chestEventArgs).SenderId = 0;
      ((GameEventArgs)chestEventArgs).EventId = (string)null;
      ((GameEventArgs)chestEventArgs).EventType = (EventType)0;
      ((GameEventArgs)chestEventArgs).NeedResponse = false;
      string[] ss = new string[1];
      ss[0] = "0";
      this.PopulateWithArgs(chestEventArgs, ss);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(ChestEventArgsTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void PopulateWithArgsThrowsContractException154()
{
    try
    {
      ChestEventArgs chestEventArgs;
      chestEventArgs = new ChestEventArgs(0);
      ((GameEventArgs)chestEventArgs).SenderId = 0;
      ((GameEventArgs)chestEventArgs).EventId = (string)null;
      ((GameEventArgs)chestEventArgs).EventType = (EventType)0;
      ((GameEventArgs)chestEventArgs).NeedResponse = false;
      string[] ss = new string[1];
      ss[0] = "\0";
      this.PopulateWithArgs(chestEventArgs, ss);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(ChestEventArgsTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void PopulateWithArgsThrowsContractException319()
{
    try
    {
      ChestEventArgs chestEventArgs;
      chestEventArgs = new ChestEventArgs(0);
      ((GameEventArgs)chestEventArgs).SenderId = 0;
      ((GameEventArgs)chestEventArgs).EventId = (string)null;
      ((GameEventArgs)chestEventArgs).EventType = (EventType)0;
      ((GameEventArgs)chestEventArgs).NeedResponse = false;
      string[] ss = new string[1];
      ss[0] = "";
      this.PopulateWithArgs(chestEventArgs, ss);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(ChestEventArgsTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void PopulateWithArgsThrowsContractException658()
{
    try
    {
      ChestEventArgs chestEventArgs;
      chestEventArgs = new ChestEventArgs(0);
      ((GameEventArgs)chestEventArgs).SenderId = 0;
      ((GameEventArgs)chestEventArgs).EventId = (string)null;
      ((GameEventArgs)chestEventArgs).EventType = (EventType)0;
      ((GameEventArgs)chestEventArgs).NeedResponse = false;
      string[] ss = new string[1];
      this.PopulateWithArgs(chestEventArgs, ss);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(ChestEventArgsTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void PopulateWithArgsThrowsContractException403()
{
    try
    {
      ChestEventArgs chestEventArgs;
      chestEventArgs = new ChestEventArgs(0);
      ((GameEventArgs)chestEventArgs).SenderId = 0;
      ((GameEventArgs)chestEventArgs).EventId = (string)null;
      ((GameEventArgs)chestEventArgs).EventType = (EventType)0;
      ((GameEventArgs)chestEventArgs).NeedResponse = false;
      string[] ss = new string[0];
      this.PopulateWithArgs(chestEventArgs, ss);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(ChestEventArgsTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void PopulateWithArgsThrowsContractException333()
{
    try
    {
      ChestEventArgs chestEventArgs;
      chestEventArgs = new ChestEventArgs(0);
      ((GameEventArgs)chestEventArgs).SenderId = 0;
      ((GameEventArgs)chestEventArgs).EventId = (string)null;
      ((GameEventArgs)chestEventArgs).EventType = (EventType)0;
      ((GameEventArgs)chestEventArgs).NeedResponse = false;
      this.PopulateWithArgs(chestEventArgs, (string[])null);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(ChestEventArgsTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void PopulateWithArgsThrowsContractException743()
{
    try
    {
      ChestEventArgs chestEventArgs;
      chestEventArgs = new ChestEventArgs(0);
      ((GameEventArgs)chestEventArgs).SenderId = 0;
      ((GameEventArgs)chestEventArgs).EventId = (string)null;
      ((GameEventArgs)chestEventArgs).EventType = (EventType)0;
      ((GameEventArgs)chestEventArgs).NeedResponse = false;
      this.PopulateWithArgs(chestEventArgs, (string[])null);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(ChestEventArgsTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void PopulateWithArgsThrowsContractException521()
{
    try
    {
      ChestEventArgs chestEventArgs;
      chestEventArgs = new ChestEventArgs(0);
      ((GameEventArgs)chestEventArgs).SenderId = 0;
      ((GameEventArgs)chestEventArgs).EventId = (string)null;
      ((GameEventArgs)chestEventArgs).EventType = (EventType)0;
      ((GameEventArgs)chestEventArgs).NeedResponse = false;
      string[] ss = new string[0];
      this.PopulateWithArgs(chestEventArgs, ss);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(ChestEventArgsTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void PopulateWithArgsThrowsContractException74()
{
    try
    {
      ChestEventArgs chestEventArgs;
      chestEventArgs = new ChestEventArgs(0);
      ((GameEventArgs)chestEventArgs).SenderId = 0;
      ((GameEventArgs)chestEventArgs).EventId = (string)null;
      ((GameEventArgs)chestEventArgs).EventType = (EventType)0;
      ((GameEventArgs)chestEventArgs).NeedResponse = false;
      string[] ss = new string[1];
      this.PopulateWithArgs(chestEventArgs, ss);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(ChestEventArgsTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void PopulateWithArgsThrowsContractException61()
{
    try
    {
      ChestEventArgs chestEventArgs;
      chestEventArgs = new ChestEventArgs(0);
      ((GameEventArgs)chestEventArgs).SenderId = 0;
      ((GameEventArgs)chestEventArgs).EventId = (string)null;
      ((GameEventArgs)chestEventArgs).EventType = (EventType)0;
      ((GameEventArgs)chestEventArgs).NeedResponse = false;
      string[] ss = new string[1];
      ss[0] = "";
      this.PopulateWithArgs(chestEventArgs, ss);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(ChestEventArgsTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void PopulateWithArgsThrowsContractException260()
{
    try
    {
      ChestEventArgs chestEventArgs;
      chestEventArgs = new ChestEventArgs(0);
      ((GameEventArgs)chestEventArgs).SenderId = 0;
      ((GameEventArgs)chestEventArgs).EventId = (string)null;
      ((GameEventArgs)chestEventArgs).EventType = (EventType)0;
      ((GameEventArgs)chestEventArgs).NeedResponse = false;
      string[] ss = new string[1];
      ss[0] = "\0";
      this.PopulateWithArgs(chestEventArgs, ss);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(ChestEventArgsTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void PopulateWithArgsThrowsContractException767()
{
    try
    {
      ChestEventArgs chestEventArgs;
      chestEventArgs = new ChestEventArgs(0);
      ((GameEventArgs)chestEventArgs).SenderId = 0;
      ((GameEventArgs)chestEventArgs).EventId = (string)null;
      ((GameEventArgs)chestEventArgs).EventType = (EventType)0;
      ((GameEventArgs)chestEventArgs).NeedResponse = false;
      string[] ss = new string[1];
      ss[0] = "0";
      this.PopulateWithArgs(chestEventArgs, ss);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(ChestEventArgsTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void PopulateWithArgsThrowsContractException324()
{
    try
    {
      ChestEventArgs chestEventArgs;
      chestEventArgs = new ChestEventArgs(0);
      ((GameEventArgs)chestEventArgs).SenderId = 0;
      ((GameEventArgs)chestEventArgs).EventId = (string)null;
      ((GameEventArgs)chestEventArgs).EventType = (EventType)0;
      ((GameEventArgs)chestEventArgs).NeedResponse = false;
      string[] ss = new string[1];
      ss[0] = ":";
      this.PopulateWithArgs(chestEventArgs, ss);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(ChestEventArgsTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void PopulateWithArgsThrowsContractException537()
{
    try
    {
      ChestEventArgs chestEventArgs;
      chestEventArgs = new ChestEventArgs(0);
      ((GameEventArgs)chestEventArgs).SenderId = 0;
      ((GameEventArgs)chestEventArgs).EventId = (string)null;
      ((GameEventArgs)chestEventArgs).EventType = (EventType)0;
      ((GameEventArgs)chestEventArgs).NeedResponse = false;
      string[] ss = new string[1];
      ss[0] = "-";
      this.PopulateWithArgs(chestEventArgs, ss);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(ChestEventArgsTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void PopulateWithArgsThrowsContractException83()
{
    try
    {
      ChestEventArgs chestEventArgs;
      chestEventArgs = new ChestEventArgs(0);
      ((GameEventArgs)chestEventArgs).SenderId = 0;
      ((GameEventArgs)chestEventArgs).EventId = (string)null;
      ((GameEventArgs)chestEventArgs).EventType = (EventType)0;
      ((GameEventArgs)chestEventArgs).NeedResponse = false;
      string[] ss = new string[1];
      ss[0] = "0\0";
      this.PopulateWithArgs(chestEventArgs, ss);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(ChestEventArgsTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void PopulateWithArgsThrowsContractException472()
{
    try
    {
      ChestEventArgs chestEventArgs;
      chestEventArgs = new ChestEventArgs(0);
      ((GameEventArgs)chestEventArgs).SenderId = 0;
      ((GameEventArgs)chestEventArgs).EventId = (string)null;
      ((GameEventArgs)chestEventArgs).EventType = (EventType)0;
      ((GameEventArgs)chestEventArgs).NeedResponse = false;
      string[] ss = new string[1];
      ss[0] = "-\0";
      this.PopulateWithArgs(chestEventArgs, ss);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(ChestEventArgsTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void PopulateWithArgsThrowsContractException218()
{
    try
    {
      ChestEventArgs chestEventArgs;
      chestEventArgs = new ChestEventArgs(0);
      ((GameEventArgs)chestEventArgs).SenderId = 0;
      ((GameEventArgs)chestEventArgs).EventId = (string)null;
      ((GameEventArgs)chestEventArgs).EventType = (EventType)0;
      ((GameEventArgs)chestEventArgs).NeedResponse = false;
      string[] ss = new string[1];
      ss[0] = "-0";
      this.PopulateWithArgs(chestEventArgs, ss);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
    }
}
