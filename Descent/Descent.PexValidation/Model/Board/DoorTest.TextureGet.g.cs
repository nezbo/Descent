// <copyright file="DoorTest.TextureGet.g.cs">Copyright ©  2011</copyright>
// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using Microsoft.Pex.Framework.Generated;
using Microsoft.Xna.Framework.Graphics;
using Microsoft.Xna.Framework;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace Descent.Model.Board
{
    public partial class DoorTest
    {
[TestMethod]
[PexGeneratedBy(typeof(DoorTest))]
public void TextureGet118()
{
    using (PexDisposableContext disposables = PexDisposableContext.Create())
    {
      Door door;
      Texture2D texture2D;
      door = new Door
                 (1, default(Point), default(Point), 0, default(Point), default(Point), 
                                                        Orientation.H, RuneKey.Red, (Texture2D)null);
      door.Opened = false;
      texture2D = this.TextureGet(door);
      disposables.Add((IDisposable)texture2D);
      disposables.Dispose();
      Assert.IsNull((object)texture2D);
      Assert.IsNotNull((object)door);
      Assert.AreEqual<bool>(false, door.Opened);
      Assert.AreEqual<bool>(true, door.IsRuneDoor);
      Assert.AreEqual<RuneKey>(RuneKey.Red, door.KeyColor);
      Assert.AreEqual<Orientation>(Orientation.H, door.Orientation);
      Assert.IsNotNull(door.Areas);
      Assert.AreEqual<int>(2, door.Areas.Length);
      Assert.AreEqual<int>(0, door.Areas[0]);
      Assert.AreEqual<int>(0, door.Areas[1]);
      Assert.IsNull(door.Texture);
    }
}
    }
}
