// <copyright file="GlyphMarkerTest.Constructor.g.cs">Copyright ©  2011</copyright>
// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using Microsoft.Xna.Framework.Graphics;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;
using Microsoft.Pex.Engine.Exceptions;

namespace Descent.Model.Board.Marker
{
    public partial class GlyphMarkerTest
    {
[TestMethod]
[PexGeneratedBy(typeof(GlyphMarkerTest))]
public void Constructor981()
{
    GlyphMarker glyphMarker;
    glyphMarker =
      this.Constructor(0, "\0", (Texture2D)null, 0, true, (Texture2D)null);
    Assert.IsNotNull((object)glyphMarker);
    Assert.AreEqual<bool>(true, glyphMarker.Open);
    Assert.AreEqual<int>
        (0, ((global::Descent.Model.Board.Marker.Marker)glyphMarker).Id);
    Assert.AreEqual<string>
        ("\0", ((global::Descent.Model.Board.Marker.Marker)glyphMarker).Name);
    Assert.IsNull(((global::Descent.Model.Board.Marker.Marker)glyphMarker).Texture);
    Assert.AreEqual<int>
        (0, ((global::Descent.Model.Board.Marker.Marker)glyphMarker).MovementPoints);
}
[TestMethod]
[PexGeneratedBy(typeof(GlyphMarkerTest))]
public void Constructor933()
{
    GlyphMarker glyphMarker;
    glyphMarker =
      this.Constructor(0, "\0", (Texture2D)null, 0, false, (Texture2D)null);
    Assert.IsNotNull((object)glyphMarker);
    Assert.AreEqual<bool>(false, glyphMarker.Open);
    Assert.AreEqual<int>
        (0, ((global::Descent.Model.Board.Marker.Marker)glyphMarker).Id);
    Assert.AreEqual<string>
        ("\0", ((global::Descent.Model.Board.Marker.Marker)glyphMarker).Name);
    Assert.IsNull(((global::Descent.Model.Board.Marker.Marker)glyphMarker).Texture);
    Assert.AreEqual<int>
        (0, ((global::Descent.Model.Board.Marker.Marker)glyphMarker).MovementPoints);
}
[TestMethod]
[PexGeneratedBy(typeof(GlyphMarkerTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void ConstructorThrowsContractException415()
{
    try
    {
      GlyphMarker glyphMarker;
      glyphMarker =
        this.Constructor(0, "", (Texture2D)null, 0, false, (Texture2D)null);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(GlyphMarkerTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void ConstructorThrowsContractException373()
{
    try
    {
      GlyphMarker glyphMarker;
      glyphMarker = this.Constructor
                        (0, (string)null, (Texture2D)null, 0, false, (Texture2D)null);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
    }
}
