// <copyright file="BoardTest.IsSquareWithinBoard01.g.cs">Copyright ©  2011</copyright>
// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using Microsoft.Xna.Framework.Graphics;
using Microsoft.Xna.Framework;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;

namespace Descent.Model.Board
{
    public partial class BoardTest
    {
[TestMethod]
[PexGeneratedBy(typeof(BoardTest))]
public void IsSquareWithinBoard0148()
{
    global::Descent.Model.Board.Board board;
    bool b;
    board = new global::Descent.Model.Board.Board(1020, 2, (Texture2D)null);
    Point s0 = default(Point);
    s0.X = 1023;
    s0.Y = default(int);
    b = this.IsSquareWithinBoard01(board, s0);
    Assert.AreEqual<bool>(false, b);
    Assert.IsNotNull((object)board);
    Assert.AreEqual<int>(1020, board.Width);
    Assert.AreEqual<int>(2, board.Height);
    Assert.IsNotNull(board.FiguresOnBoard);
    Assert.IsNotNull(board.FiguresOnBoard.Comparer);
    Assert.AreEqual<int>(0, board.FiguresOnBoard.Count);
    Assert.IsNull(board.FloorTexture);
}
[TestMethod]
[PexGeneratedBy(typeof(BoardTest))]
public void IsSquareWithinBoard01684()
{
    global::Descent.Model.Board.Board board;
    bool b;
    board = new global::Descent.Model.Board.Board(2, 2, (Texture2D)null);
    Point s0 = default(Point);
    s0.X = int.MinValue;
    s0.Y = default(int);
    b = this.IsSquareWithinBoard01(board, s0);
    Assert.AreEqual<bool>(false, b);
    Assert.IsNotNull((object)board);
    Assert.AreEqual<int>(2, board.Width);
    Assert.AreEqual<int>(2, board.Height);
    Assert.IsNotNull(board.FiguresOnBoard);
    Assert.IsNotNull(board.FiguresOnBoard.Comparer);
    Assert.AreEqual<int>(0, board.FiguresOnBoard.Count);
    Assert.IsNull(board.FloorTexture);
}
[TestMethod]
[PexGeneratedBy(typeof(BoardTest))]
public void IsSquareWithinBoard01219()
{
    global::Descent.Model.Board.Board board;
    bool b;
    board = new global::Descent.Model.Board.Board(2, 64, (Texture2D)null);
    Point s0 = default(Point);
    s0.X = default(int);
    s0.Y = int.MinValue;
    b = this.IsSquareWithinBoard01(board, s0);
    Assert.AreEqual<bool>(false, b);
    Assert.IsNotNull((object)board);
    Assert.AreEqual<int>(2, board.Width);
    Assert.AreEqual<int>(64, board.Height);
    Assert.IsNotNull(board.FiguresOnBoard);
    Assert.IsNotNull(board.FiguresOnBoard.Comparer);
    Assert.AreEqual<int>(0, board.FiguresOnBoard.Count);
    Assert.IsNull(board.FloorTexture);
}
[TestMethod]
[PexGeneratedBy(typeof(BoardTest))]
public void IsSquareWithinBoard01414()
{
    global::Descent.Model.Board.Board board;
    bool b;
    board = new global::Descent.Model.Board.Board(2, 2, (Texture2D)null);
    b = this.IsSquareWithinBoard01(board, default(Point));
    Assert.AreEqual<bool>(false, b);
    Assert.IsNotNull((object)board);
    Assert.AreEqual<int>(2, board.Width);
    Assert.AreEqual<int>(2, board.Height);
    Assert.IsNotNull(board.FiguresOnBoard);
    Assert.IsNotNull(board.FiguresOnBoard.Comparer);
    Assert.AreEqual<int>(0, board.FiguresOnBoard.Count);
    Assert.IsNull(board.FloorTexture);
}
[TestMethod]
[PexGeneratedBy(typeof(BoardTest))]
public void IsSquareWithinBoard55()
{
    global::Descent.Model.Board.Board board;
    bool b;
    board = new global::Descent.Model.Board.Board(1022, 2, (Texture2D)null);
    b = this.IsSquareWithinBoard(board, 1073742844, 0);
    Assert.AreEqual<bool>(false, b);
    Assert.IsNotNull((object)board);
    Assert.AreEqual<int>(1022, board.Width);
    Assert.AreEqual<int>(2, board.Height);
    Assert.IsNotNull(board.FiguresOnBoard);
    Assert.IsNotNull(board.FiguresOnBoard.Comparer);
    Assert.AreEqual<int>(0, board.FiguresOnBoard.Count);
    Assert.IsNull(board.FloorTexture);
}
[TestMethod]
[PexGeneratedBy(typeof(BoardTest))]
public void IsSquareWithinBoard742()
{
    global::Descent.Model.Board.Board board;
    bool b;
    board = new global::Descent.Model.Board.Board(2, 2, (Texture2D)null);
    b = this.IsSquareWithinBoard(board, int.MinValue, 0);
    Assert.AreEqual<bool>(false, b);
    Assert.IsNotNull((object)board);
    Assert.AreEqual<int>(2, board.Width);
    Assert.AreEqual<int>(2, board.Height);
    Assert.IsNotNull(board.FiguresOnBoard);
    Assert.IsNotNull(board.FiguresOnBoard.Comparer);
    Assert.AreEqual<int>(0, board.FiguresOnBoard.Count);
    Assert.IsNull(board.FloorTexture);
}
[TestMethod]
[PexGeneratedBy(typeof(BoardTest))]
public void IsSquareWithinBoard607()
{
    global::Descent.Model.Board.Board board;
    bool b;
    board = new global::Descent.Model.Board.Board(2, 2, (Texture2D)null);
    b = this.IsSquareWithinBoard(board, 0, int.MinValue);
    Assert.AreEqual<bool>(false, b);
    Assert.IsNotNull((object)board);
    Assert.AreEqual<int>(2, board.Width);
    Assert.AreEqual<int>(2, board.Height);
    Assert.IsNotNull(board.FiguresOnBoard);
    Assert.IsNotNull(board.FiguresOnBoard.Comparer);
    Assert.AreEqual<int>(0, board.FiguresOnBoard.Count);
    Assert.IsNull(board.FloorTexture);
}
[TestMethod]
[PexGeneratedBy(typeof(BoardTest))]
public void IsSquareWithinBoard743()
{
    global::Descent.Model.Board.Board board;
    bool b;
    board = new global::Descent.Model.Board.Board(2, 2, (Texture2D)null);
    b = this.IsSquareWithinBoard(board, 0, 0);
    Assert.AreEqual<bool>(false, b);
    Assert.IsNotNull((object)board);
    Assert.AreEqual<int>(2, board.Width);
    Assert.AreEqual<int>(2, board.Height);
    Assert.IsNotNull(board.FiguresOnBoard);
    Assert.IsNotNull(board.FiguresOnBoard.Comparer);
    Assert.AreEqual<int>(0, board.FiguresOnBoard.Count);
    Assert.IsNull(board.FloorTexture);
}
    }
}
