// <copyright file="CoordinatesEventArgsTest.PopulateWithArgs.g.cs">Copyright ©  2011</copyright>
// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;
using Microsoft.Pex.Engine.Exceptions;

namespace Descent.Messaging.Events
{
    public partial class CoordinatesEventArgsTest
    {
[TestMethod]
[PexGeneratedBy(typeof(CoordinatesEventArgsTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void PopulateWithArgsThrowsContractException925()
{
    try
    {
      CoordinatesEventArgs s0 = new CoordinatesEventArgs(0, 0);
      ((GameEventArgs)s0).SenderId = 0;
      ((GameEventArgs)s0).EventId = (string)null;
      ((GameEventArgs)s0).EventType = (EventType)0;
      ((GameEventArgs)s0).NeedResponse = false;
      string[] ss = new string[2];
      ss[0] = "-0";
      ss[1] = "-\0";
      this.PopulateWithArgs(s0, ss);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(CoordinatesEventArgsTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void PopulateWithArgsThrowsContractException238()
{
    try
    {
      CoordinatesEventArgs s0 = new CoordinatesEventArgs(0, 0);
      ((GameEventArgs)s0).SenderId = 0;
      ((GameEventArgs)s0).EventId = (string)null;
      ((GameEventArgs)s0).EventType = (EventType)0;
      ((GameEventArgs)s0).NeedResponse = false;
      string[] ss = new string[2];
      ss[0] = "-0\0";
      ss[1] = "\0";
      this.PopulateWithArgs(s0, ss);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(CoordinatesEventArgsTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void PopulateWithArgsThrowsContractException910()
{
    try
    {
      CoordinatesEventArgs s0 = new CoordinatesEventArgs(0, 0);
      ((GameEventArgs)s0).SenderId = 0;
      ((GameEventArgs)s0).EventId = (string)null;
      ((GameEventArgs)s0).EventType = (EventType)0;
      ((GameEventArgs)s0).NeedResponse = false;
      string[] ss = new string[2];
      ss[0] = "00\0";
      ss[1] = "--";
      this.PopulateWithArgs(s0, ss);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(CoordinatesEventArgsTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void PopulateWithArgsThrowsContractException263()
{
    try
    {
      CoordinatesEventArgs s0 = new CoordinatesEventArgs(0, 0);
      ((GameEventArgs)s0).SenderId = 0;
      ((GameEventArgs)s0).EventId = (string)null;
      ((GameEventArgs)s0).EventType = (EventType)0;
      ((GameEventArgs)s0).NeedResponse = false;
      string[] ss = new string[2];
      ss[0] = "00\0";
      ss[1] = "-";
      this.PopulateWithArgs(s0, ss);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(CoordinatesEventArgsTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void PopulateWithArgsThrowsContractException344()
{
    try
    {
      CoordinatesEventArgs s0 = new CoordinatesEventArgs(0, 0);
      ((GameEventArgs)s0).SenderId = 0;
      ((GameEventArgs)s0).EventId = (string)null;
      ((GameEventArgs)s0).EventType = (EventType)0;
      ((GameEventArgs)s0).NeedResponse = false;
      string[] ss = new string[2];
      ss[0] = "-0\0";
      ss[1] = "-";
      this.PopulateWithArgs(s0, ss);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(CoordinatesEventArgsTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void PopulateWithArgsThrowsContractException845()
{
    try
    {
      CoordinatesEventArgs s0 = new CoordinatesEventArgs(0, 0);
      ((GameEventArgs)s0).SenderId = 0;
      ((GameEventArgs)s0).EventId = (string)null;
      ((GameEventArgs)s0).EventType = (EventType)0;
      ((GameEventArgs)s0).NeedResponse = false;
      string[] ss = new string[2];
      ss[0] = "0\0";
      ss[1] = "";
      this.PopulateWithArgs(s0, ss);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(CoordinatesEventArgsTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void PopulateWithArgsThrowsContractException228()
{
    try
    {
      CoordinatesEventArgs s0 = new CoordinatesEventArgs(0, 0);
      ((GameEventArgs)s0).SenderId = 0;
      ((GameEventArgs)s0).EventId = (string)null;
      ((GameEventArgs)s0).EventType = (EventType)0;
      ((GameEventArgs)s0).NeedResponse = false;
      string[] ss = new string[2];
      ss[0] = "-\0";
      ss[1] = "-\0";
      this.PopulateWithArgs(s0, ss);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(CoordinatesEventArgsTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void PopulateWithArgsThrowsContractException181()
{
    try
    {
      CoordinatesEventArgs s0 = new CoordinatesEventArgs(0, 0);
      ((GameEventArgs)s0).SenderId = 0;
      ((GameEventArgs)s0).EventId = (string)null;
      ((GameEventArgs)s0).EventType = (EventType)0;
      ((GameEventArgs)s0).NeedResponse = false;
      string[] ss = new string[2];
      ss[0] = ":";
      ss[1] = ":";
      this.PopulateWithArgs(s0, ss);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(CoordinatesEventArgsTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void PopulateWithArgsThrowsContractException499()
{
    try
    {
      CoordinatesEventArgs s0 = new CoordinatesEventArgs(0, 0);
      ((GameEventArgs)s0).SenderId = 0;
      ((GameEventArgs)s0).EventId = (string)null;
      ((GameEventArgs)s0).EventType = (EventType)0;
      ((GameEventArgs)s0).NeedResponse = false;
      string[] ss = new string[2];
      ss[0] = "\u0001";
      ss[1] = "\u0001";
      this.PopulateWithArgs(s0, ss);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(CoordinatesEventArgsTest))]
public void PopulateWithArgs203()
{
    CoordinatesEventArgs s0 = new CoordinatesEventArgs(0, 0);
    ((GameEventArgs)s0).SenderId = 0;
    ((GameEventArgs)s0).EventId = (string)null;
    ((GameEventArgs)s0).EventType = (EventType)0;
    ((GameEventArgs)s0).NeedResponse = false;
    string[] ss = new string[2];
    ss[0] = "0";
    ss[1] = "0";
    this.PopulateWithArgs(s0, ss);
    Assert.IsNotNull((object)s0);
    Assert.AreEqual<int>(0, s0.X);
    Assert.AreEqual<int>(0, s0.Y);
    Assert.AreEqual<int>(0, ((GameEventArgs)s0).SenderId);
    Assert.AreEqual<string>((string)null, ((GameEventArgs)s0).EventId);
    Assert.AreEqual<EventType>((EventType)0, ((GameEventArgs)s0).EventType);
    Assert.AreEqual<bool>(false, ((GameEventArgs)s0).NeedResponse);
}
[TestMethod]
[PexGeneratedBy(typeof(CoordinatesEventArgsTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void PopulateWithArgsThrowsContractException994()
{
    try
    {
      CoordinatesEventArgs s0 = new CoordinatesEventArgs(0, 0);
      ((GameEventArgs)s0).SenderId = 0;
      ((GameEventArgs)s0).EventId = (string)null;
      ((GameEventArgs)s0).EventType = (EventType)0;
      ((GameEventArgs)s0).NeedResponse = false;
      string[] ss = new string[2];
      ss[0] = "-";
      ss[1] = "-";
      this.PopulateWithArgs(s0, ss);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(CoordinatesEventArgsTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void PopulateWithArgsThrowsContractException575()
{
    try
    {
      CoordinatesEventArgs s0 = new CoordinatesEventArgs(0, 0);
      ((GameEventArgs)s0).SenderId = 0;
      ((GameEventArgs)s0).EventId = (string)null;
      ((GameEventArgs)s0).EventType = (EventType)0;
      ((GameEventArgs)s0).NeedResponse = false;
      string[] ss = new string[2];
      ss[0] = "\0";
      ss[1] = "\0";
      this.PopulateWithArgs(s0, ss);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(CoordinatesEventArgsTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void PopulateWithArgsThrowsContractException281()
{
    try
    {
      CoordinatesEventArgs s0 = new CoordinatesEventArgs(0, 0);
      ((GameEventArgs)s0).SenderId = 0;
      ((GameEventArgs)s0).EventId = (string)null;
      ((GameEventArgs)s0).EventType = (EventType)0;
      ((GameEventArgs)s0).NeedResponse = false;
      string[] ss = new string[2];
      ss[0] = "";
      ss[1] = "";
      this.PopulateWithArgs(s0, ss);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(CoordinatesEventArgsTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void PopulateWithArgsThrowsContractException661()
{
    try
    {
      CoordinatesEventArgs s0 = new CoordinatesEventArgs(0, 0);
      ((GameEventArgs)s0).SenderId = 0;
      ((GameEventArgs)s0).EventId = (string)null;
      ((GameEventArgs)s0).EventType = (EventType)0;
      ((GameEventArgs)s0).NeedResponse = false;
      string[] ss = new string[2];
      this.PopulateWithArgs(s0, ss);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(CoordinatesEventArgsTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void PopulateWithArgsThrowsContractException116()
{
    try
    {
      CoordinatesEventArgs s0 = new CoordinatesEventArgs(0, 0);
      ((GameEventArgs)s0).SenderId = 0;
      ((GameEventArgs)s0).EventId = (string)null;
      ((GameEventArgs)s0).EventType = (EventType)0;
      ((GameEventArgs)s0).NeedResponse = false;
      string[] ss = new string[0];
      this.PopulateWithArgs(s0, ss);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(CoordinatesEventArgsTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void PopulateWithArgsThrowsContractException291()
{
    try
    {
      CoordinatesEventArgs s0 = new CoordinatesEventArgs(0, 0);
      ((GameEventArgs)s0).SenderId = 0;
      ((GameEventArgs)s0).EventId = (string)null;
      ((GameEventArgs)s0).EventType = (EventType)0;
      ((GameEventArgs)s0).NeedResponse = false;
      this.PopulateWithArgs(s0, (string[])null);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(CoordinatesEventArgsTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void PopulateWithArgsThrowsContractException5()
{
    try
    {
      CoordinatesEventArgs s0 = new CoordinatesEventArgs(0, 0);
      ((GameEventArgs)s0).SenderId = 0;
      ((GameEventArgs)s0).EventId = (string)null;
      ((GameEventArgs)s0).EventType = (EventType)0;
      ((GameEventArgs)s0).NeedResponse = false;
      this.PopulateWithArgs(s0, (string[])null);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(CoordinatesEventArgsTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void PopulateWithArgsThrowsContractException787()
{
    try
    {
      CoordinatesEventArgs s0 = new CoordinatesEventArgs(0, 0);
      ((GameEventArgs)s0).SenderId = 0;
      ((GameEventArgs)s0).EventId = (string)null;
      ((GameEventArgs)s0).EventType = (EventType)0;
      ((GameEventArgs)s0).NeedResponse = false;
      string[] ss = new string[0];
      this.PopulateWithArgs(s0, ss);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(CoordinatesEventArgsTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void PopulateWithArgsThrowsContractException628()
{
    try
    {
      CoordinatesEventArgs s0 = new CoordinatesEventArgs(0, 0);
      ((GameEventArgs)s0).SenderId = 0;
      ((GameEventArgs)s0).EventId = (string)null;
      ((GameEventArgs)s0).EventType = (EventType)0;
      ((GameEventArgs)s0).NeedResponse = false;
      string[] ss = new string[2];
      this.PopulateWithArgs(s0, ss);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(CoordinatesEventArgsTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void PopulateWithArgsThrowsContractException854()
{
    try
    {
      CoordinatesEventArgs s0 = new CoordinatesEventArgs(0, 0);
      ((GameEventArgs)s0).SenderId = 0;
      ((GameEventArgs)s0).EventId = (string)null;
      ((GameEventArgs)s0).EventType = (EventType)0;
      ((GameEventArgs)s0).NeedResponse = false;
      string[] ss = new string[2];
      ss[0] = "";
      ss[1] = "";
      this.PopulateWithArgs(s0, ss);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(CoordinatesEventArgsTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void PopulateWithArgsThrowsContractException160()
{
    try
    {
      CoordinatesEventArgs s0 = new CoordinatesEventArgs(0, 0);
      ((GameEventArgs)s0).SenderId = 0;
      ((GameEventArgs)s0).EventId = (string)null;
      ((GameEventArgs)s0).EventType = (EventType)0;
      ((GameEventArgs)s0).NeedResponse = false;
      string[] ss = new string[2];
      ss[0] = "\0";
      ss[1] = "\0";
      this.PopulateWithArgs(s0, ss);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(CoordinatesEventArgsTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void PopulateWithArgsThrowsContractException758()
{
    try
    {
      CoordinatesEventArgs s0 = new CoordinatesEventArgs(0, 0);
      ((GameEventArgs)s0).SenderId = 0;
      ((GameEventArgs)s0).EventId = (string)null;
      ((GameEventArgs)s0).EventType = (EventType)0;
      ((GameEventArgs)s0).NeedResponse = false;
      string[] ss = new string[2];
      ss[0] = "-";
      ss[1] = "-";
      this.PopulateWithArgs(s0, ss);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(CoordinatesEventArgsTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void PopulateWithArgsThrowsContractException913()
{
    try
    {
      CoordinatesEventArgs s0 = new CoordinatesEventArgs(0, 0);
      ((GameEventArgs)s0).SenderId = 0;
      ((GameEventArgs)s0).EventId = (string)null;
      ((GameEventArgs)s0).EventType = (EventType)0;
      ((GameEventArgs)s0).NeedResponse = false;
      string[] ss = new string[2];
      ss[0] = "\u0001";
      ss[1] = "\u0001";
      this.PopulateWithArgs(s0, ss);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(CoordinatesEventArgsTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void PopulateWithArgsThrowsContractException208()
{
    try
    {
      CoordinatesEventArgs s0 = new CoordinatesEventArgs(0, 0);
      ((GameEventArgs)s0).SenderId = 0;
      ((GameEventArgs)s0).EventId = (string)null;
      ((GameEventArgs)s0).EventType = (EventType)0;
      ((GameEventArgs)s0).NeedResponse = false;
      string[] ss = new string[2];
      ss[0] = ":";
      ss[1] = ":";
      this.PopulateWithArgs(s0, ss);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(CoordinatesEventArgsTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void PopulateWithArgsThrowsContractException509()
{
    try
    {
      CoordinatesEventArgs s0 = new CoordinatesEventArgs(0, 0);
      ((GameEventArgs)s0).SenderId = 0;
      ((GameEventArgs)s0).EventId = (string)null;
      ((GameEventArgs)s0).EventType = (EventType)0;
      ((GameEventArgs)s0).NeedResponse = false;
      string[] ss = new string[2];
      ss[0] = "-\0";
      ss[1] = "-\0";
      this.PopulateWithArgs(s0, ss);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(CoordinatesEventArgsTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void PopulateWithArgsThrowsContractException963()
{
    try
    {
      CoordinatesEventArgs s0 = new CoordinatesEventArgs(0, 0);
      ((GameEventArgs)s0).SenderId = 0;
      ((GameEventArgs)s0).EventId = (string)null;
      ((GameEventArgs)s0).EventType = (EventType)0;
      ((GameEventArgs)s0).NeedResponse = false;
      string[] ss = new string[2];
      ss[0] = "0\0";
      ss[1] = "";
      this.PopulateWithArgs(s0, ss);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(CoordinatesEventArgsTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void PopulateWithArgsThrowsContractException193()
{
    try
    {
      CoordinatesEventArgs s0 = new CoordinatesEventArgs(0, 0);
      ((GameEventArgs)s0).SenderId = 0;
      ((GameEventArgs)s0).EventId = (string)null;
      ((GameEventArgs)s0).EventType = (EventType)0;
      ((GameEventArgs)s0).NeedResponse = false;
      string[] ss = new string[2];
      ss[0] = "-0\0";
      ss[1] = "-";
      this.PopulateWithArgs(s0, ss);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(CoordinatesEventArgsTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void PopulateWithArgsThrowsContractException980()
{
    try
    {
      CoordinatesEventArgs s0 = new CoordinatesEventArgs(0, 0);
      ((GameEventArgs)s0).SenderId = 0;
      ((GameEventArgs)s0).EventId = (string)null;
      ((GameEventArgs)s0).EventType = (EventType)0;
      ((GameEventArgs)s0).NeedResponse = false;
      string[] ss = new string[2];
      ss[0] = "00\0";
      ss[1] = "-";
      this.PopulateWithArgs(s0, ss);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(CoordinatesEventArgsTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void PopulateWithArgsThrowsContractException103()
{
    try
    {
      CoordinatesEventArgs s0 = new CoordinatesEventArgs(0, 0);
      ((GameEventArgs)s0).SenderId = 0;
      ((GameEventArgs)s0).EventId = (string)null;
      ((GameEventArgs)s0).EventType = (EventType)0;
      ((GameEventArgs)s0).NeedResponse = false;
      string[] ss = new string[2];
      ss[0] = "00\0";
      ss[1] = "--";
      this.PopulateWithArgs(s0, ss);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(CoordinatesEventArgsTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void PopulateWithArgsThrowsContractException115()
{
    try
    {
      CoordinatesEventArgs s0 = new CoordinatesEventArgs(0, 0);
      ((GameEventArgs)s0).SenderId = 0;
      ((GameEventArgs)s0).EventId = (string)null;
      ((GameEventArgs)s0).EventType = (EventType)0;
      ((GameEventArgs)s0).NeedResponse = false;
      string[] ss = new string[2];
      ss[0] = "-0\0";
      ss[1] = "\0";
      this.PopulateWithArgs(s0, ss);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(CoordinatesEventArgsTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void PopulateWithArgsThrowsContractException912()
{
    try
    {
      CoordinatesEventArgs s0 = new CoordinatesEventArgs(0, 0);
      ((GameEventArgs)s0).SenderId = 0;
      ((GameEventArgs)s0).EventId = (string)null;
      ((GameEventArgs)s0).EventType = (EventType)0;
      ((GameEventArgs)s0).NeedResponse = false;
      string[] ss = new string[2];
      ss[0] = "-0";
      ss[1] = "-\0";
      this.PopulateWithArgs(s0, ss);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
    }
}
